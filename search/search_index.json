{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to aiovalorant An asynchronous wrapper for https://valorant-api.com/ built with aiosonic and pydantic.","title":"Home"},{"location":"#welcome-to-aiovalorant","text":"An asynchronous wrapper for https://valorant-api.com/ built with aiosonic and pydantic.","title":"Welcome to aiovalorant"},{"location":"Client/","text":"__init__ ( http_client = aiosonic . HTTPClient ()) Initializes the API client. Parameters: Name Type Description Default http_client aiosonic . HTTPClient The http client to use aiosonic.HTTPClient() get_agent_by_uuid ( uuid , language = None ) async Gets an agent by the UUID. Parameters: Name Type Description Default uuid str the agent's uuid required language typing . Optional [ str ] the language None Returns: Type Description agents . Agent agents.Agent: the agent get_agents ( language = None , is_playable_character = None ) async Gets the agents. Parameters: Name Type Description Default language typing . Optional [ str ] the language None is_playable_character typing . Optional [ bool ] if the agent can be used None Returns: Type Description list [ agents . Agent ] list[agents.Agent]: a list of the agents get_buddies ( language = None ) async Gets the buddies. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ buddies . Buddy ] list[buddies.Buddy]: a list of the buddies get_buddy_by_uuid ( uuid , language = None ) async Gets a buddy by the uuid. Parameters: Name Type Description Default uuid str the buddy's uuid required language typing . Optional [ str ] the language None Returns: Type Description buddies . Buddy buddies.Buddy: the buddy get_bundle_by_uuid ( uuid , language = None ) async Gets a bundle by its uuid. Parameters: Name Type Description Default uuid str the bundle's uuid required language typing . Optional [ str ] the language None Returns: Type Description bundles . Bundle bundles.Bundle: the bundle get_bundles ( language = None ) async Gets the bundles. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ bundles . Bundle ] list[bundles.Bundle]: a list of the bundles get_ceremonies ( language = None ) async Gets the ceremonies. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ ceremonies . Ceremony ] list[ceremonies.Ceremony]: a list of the ceremonies get_ceremony_by_uuid ( uuid , language = None ) async Gets a ceremony by its uuid. Parameters: Name Type Description Default uuid str the ceremony's uuid required language typing . Optional [ str ] the language None Returns: Type Description ceremonies . Ceremony ceremonies.Ceremony: the ceremony get_competitive_season_by_uuid ( uuid , language = None ) async Gets a competitive season by its uuid. Parameters: Name Type Description Default uuid str the competitive season's uuid required language str the language None Returns: Type Description seasons . CompetitiveSeason seasons.CompetitiveSeason: the season get_competitive_seasons ( language = None ) async Gets the competitive seasons. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ seasons . CompetitiveSeason ] list[seasons.CompetitiveSeason]: a list of the competitive seasons get_competitive_tier_by_uuid ( uuid , language = None ) async Gets a competitive tier by its uuid. Parameters: Name Type Description Default uuid str the competitive tier's uuid required language typing . Optional [ str ] the language None Returns: Type Description competitive_tiers . CompetitiveTier competitive_tiers.CompetitiveTier: the competitive tier get_competitive_tiers ( language = None ) async Gets the competitive tiers. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ competitive_tiers . CompetitiveTier ] list[competitive_tiers.CompetitiveTier]: a list of the competitive tiers get_content_tier_by_uuid ( uuid , language = None ) async Gets a content tier by its uuid. Parameters: Name Type Description Default uuid str the content tier's uuid required language typing . Optional [ str ] the language None Returns: Type Description content_tiers . ContentTier content_tiers.ContentTier: the content tier get_content_tiers ( language = None ) async Gets the content tiers. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ content_tiers . ContentTier ] list[content_tiers.ContentTier]: a list of the content tiers get_contract_by_uuid ( uuid , language = None ) async Gets a contract by its uuid. Parameters: Name Type Description Default uuid str the contract's uuid required language typing . Optional [ str ] the language None Returns: Type Description contracts . Contract contracts.Contract: the contract get_contracts ( language = None ) async Gets the contracts. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ contracts . Contract ] list[contracts.Contract]: a list of the contracts get_currencies ( language = None ) async Gets the currencies. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ currencies . Currency ] list[currencies.Currency]: a list of the currencies get_currency_by_uuid ( uuid , language = None ) async Gets a currency by its uuid. Parameters: Name Type Description Default uuid str the currency's uuid required language str the language None Returns: Type Description currencies . Currency currencies.Curreny: the currency get_event_by_uuid ( uuid , language = None ) async Gets a event by its uuid. Parameters: Name Type Description Default uuid str the event's uuid required language str the language None Returns: Type Description events . Event events.Event: the event get_events ( language = None ) async Gets the events. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ events . Event ] list[events.Event]: a list of the events get_gamemode_by_uuid ( uuid , language = None ) async Gets a gamemode by its uuid. Parameters: Name Type Description Default uuid str the gamemode's uuid required language str the language None Returns: Type Description gamemodes . Gamemode gamemodes.Gamemode: the gamemode get_gamemode_equippable_by_uuid ( uuid , language = None ) async Gets a gamemode equippable by its uuid. Parameters: Name Type Description Default uuid str the gamemode equippable's uuid required language str the language None Returns: Type Description gamemodes . GamemodeEquippable gamemodes.GamemodeEquippable: the gamemode equippable get_gamemode_equippables ( language = None ) async Gets the gamemodes equippables. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ gamemodes . GamemodeEquippable ] list[gamemodes.Gamemode]: a list of the gamemodee eqippables get_gamemodes ( language = None ) async Gets the gamemodes. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ gamemodes . Gamemode ] list[gamemodes.Gamemode]: a list of the gamemodes get_gear ( language = None ) async Gets the gear. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ gear . Gear ] list[gear.gear]: a list of the gear get_gear_by_uuid ( uuid , language = None ) async Gets a gear by its uuid. Parameters: Name Type Description Default uuid str the gear's uuid required language str the language None Returns: Type Description gear . Gear gear.gear: the gear get_level_borders ( language = None ) async Gets the level borders. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ level_borders . LevelBorder ] list[level_borders.LevelBorder]: a list of the level borders get_level_borders_by_uuid ( uuid , language = None ) async Gets a level border by its uuid. Parameters: Name Type Description Default uuid str the level border's uuid required language str the language None Returns: Type Description level_borders . LevelBorder level_borders.LevelBorder: the level border get_map_by_uuid ( uuid , language = None ) async Gets a map by its uuid. Parameters: Name Type Description Default uuid str the map's uuid required language str the language None Returns: Type Description maps . Map maps.Map: the map get_maps ( language = None ) async Gets the maps. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ maps . Map ] list[maps.Map]: a list of the maps get_player_card_by_uuid ( uuid , language = None ) async Gets a player card by its uuid. Parameters: Name Type Description Default uuid str the player card's uuid required language str the language None Returns: Type Description player_cards . PlayerCard player_cards.PlayerCard: the player card get_player_cards ( language = None ) async Gets the player cards. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ player_cards . PlayerCard ] list[player_cards.PlayerCard]: a list of the player cards get_player_title_by_uuid ( uuid , language = None ) async Gets a player title by its uuid. Parameters: Name Type Description Default uuid str the player title's uuid required language str the language None Returns: Type Description player_titles . PlayerTitle player_titles.Playertitle: the player title get_player_titles ( language = None ) async Gets the player titles. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ player_titles . PlayerTitle ] list[player_titles.Playertitle]: a list of the player titles get_season_by_uuid ( uuid , language = None ) async Gets a season by its uuid. Parameters: Name Type Description Default uuid str the season's uuid required language str the language None Returns: Type Description seasons . Season seasons.Season: the season get_seasons ( language = None ) async Gets the seasons. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ seasons . Season ] list[seasons.Season]: a list of the seasons get_spray_by_uuid ( uuid , language = None ) async Gets a spray by its uuid. Parameters: Name Type Description Default uuid str the spray's uuid required language str the language None Returns: Type Description sprays . Spray sprays.Spray: the spray get_spray_level_by_uuid ( uuid , language = None ) async Gets a spray level by its uuid. Parameters: Name Type Description Default uuid str the spray level's uuid required language str the language None Returns: Type Description sprays . Spray sprays.SprayLevel: the spray level get_spray_levels ( language = None ) async Gets the spray levels. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ sprays . SprayLevel ] list[sprays.SprayLevel]: a list of the spray levels get_sprays ( language = None ) async Gets the sprays. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ sprays . Spray ] list[sprays.Spray]: a list of the sprays get_themes ( language = None ) async Gets the themes. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ themes . Theme ] list[themes.Theme]: a list of the themes get_themes_by_uuid ( uuid , language = None ) async Gets a theme by its uuid. Parameters: Name Type Description Default uuid str the theme's uuid required language str the language None Returns: Type Description themes . Theme themes.Theme: the theme get_version () async Gets the version. Returns: Type Description version . Version version.Version: the version get_weapon_skin_by_uuid ( uuid , language = None ) async Gets a weapon skin by its uuid. Parameters: Name Type Description Default uuid str the weapon skin's uuid required language str the language None Returns: Type Description weapons . WeaponSkin weapons.WeaponSkin: the weapon skin get_weapon_skin_chroma_by_uuid ( uuid , language = None ) async Gets a weapon skin by its uuid. Parameters: Name Type Description Default uuid str the weapon skin's uuid required language str the language None Returns: Type Description weapons . WeaponSkinChroma weapons.WeaponSkinChroma: the weapon skin get_weapon_skin_chromas ( language = None ) async Gets weapon skin chromas. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ weapons . WeaponSkinChroma ] list[weapons.WeaponSkinChroma]: a list of the weapon skin chromas get_weapon_skins ( language = None ) async Gets weapon skins. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ weapons . WeaponSkin ] list[weapons.WeaponSkin]: a list of the weapon skins get_weapons ( language = None ) async Gets weapons. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ weapons . Weapon ] list[weapons.Weapon]: a list of the weapons get_weapons_by_uuid ( uuid , language = None ) async Gets a weapon by its uuid. Parameters: Name Type Description Default uuid str the weapon's uuid required language str the language None Returns: Type Description weapons . Weapon weapons.Weapon: the weapon","title":"Client"},{"location":"Client/#aiovalorant.client.Client.__init__","text":"Initializes the API client. Parameters: Name Type Description Default http_client aiosonic . HTTPClient The http client to use aiosonic.HTTPClient()","title":"__init__()"},{"location":"Client/#aiovalorant.client.Client.get_agent_by_uuid","text":"Gets an agent by the UUID. Parameters: Name Type Description Default uuid str the agent's uuid required language typing . Optional [ str ] the language None Returns: Type Description agents . Agent agents.Agent: the agent","title":"get_agent_by_uuid()"},{"location":"Client/#aiovalorant.client.Client.get_agents","text":"Gets the agents. Parameters: Name Type Description Default language typing . Optional [ str ] the language None is_playable_character typing . Optional [ bool ] if the agent can be used None Returns: Type Description list [ agents . Agent ] list[agents.Agent]: a list of the agents","title":"get_agents()"},{"location":"Client/#aiovalorant.client.Client.get_buddies","text":"Gets the buddies. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ buddies . Buddy ] list[buddies.Buddy]: a list of the buddies","title":"get_buddies()"},{"location":"Client/#aiovalorant.client.Client.get_buddy_by_uuid","text":"Gets a buddy by the uuid. Parameters: Name Type Description Default uuid str the buddy's uuid required language typing . Optional [ str ] the language None Returns: Type Description buddies . Buddy buddies.Buddy: the buddy","title":"get_buddy_by_uuid()"},{"location":"Client/#aiovalorant.client.Client.get_bundle_by_uuid","text":"Gets a bundle by its uuid. Parameters: Name Type Description Default uuid str the bundle's uuid required language typing . Optional [ str ] the language None Returns: Type Description bundles . Bundle bundles.Bundle: the bundle","title":"get_bundle_by_uuid()"},{"location":"Client/#aiovalorant.client.Client.get_bundles","text":"Gets the bundles. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ bundles . Bundle ] list[bundles.Bundle]: a list of the bundles","title":"get_bundles()"},{"location":"Client/#aiovalorant.client.Client.get_ceremonies","text":"Gets the ceremonies. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ ceremonies . Ceremony ] list[ceremonies.Ceremony]: a list of the ceremonies","title":"get_ceremonies()"},{"location":"Client/#aiovalorant.client.Client.get_ceremony_by_uuid","text":"Gets a ceremony by its uuid. Parameters: Name Type Description Default uuid str the ceremony's uuid required language typing . Optional [ str ] the language None Returns: Type Description ceremonies . Ceremony ceremonies.Ceremony: the ceremony","title":"get_ceremony_by_uuid()"},{"location":"Client/#aiovalorant.client.Client.get_competitive_season_by_uuid","text":"Gets a competitive season by its uuid. Parameters: Name Type Description Default uuid str the competitive season's uuid required language str the language None Returns: Type Description seasons . CompetitiveSeason seasons.CompetitiveSeason: the season","title":"get_competitive_season_by_uuid()"},{"location":"Client/#aiovalorant.client.Client.get_competitive_seasons","text":"Gets the competitive seasons. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ seasons . CompetitiveSeason ] list[seasons.CompetitiveSeason]: a list of the competitive seasons","title":"get_competitive_seasons()"},{"location":"Client/#aiovalorant.client.Client.get_competitive_tier_by_uuid","text":"Gets a competitive tier by its uuid. Parameters: Name Type Description Default uuid str the competitive tier's uuid required language typing . Optional [ str ] the language None Returns: Type Description competitive_tiers . CompetitiveTier competitive_tiers.CompetitiveTier: the competitive tier","title":"get_competitive_tier_by_uuid()"},{"location":"Client/#aiovalorant.client.Client.get_competitive_tiers","text":"Gets the competitive tiers. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ competitive_tiers . CompetitiveTier ] list[competitive_tiers.CompetitiveTier]: a list of the competitive tiers","title":"get_competitive_tiers()"},{"location":"Client/#aiovalorant.client.Client.get_content_tier_by_uuid","text":"Gets a content tier by its uuid. Parameters: Name Type Description Default uuid str the content tier's uuid required language typing . Optional [ str ] the language None Returns: Type Description content_tiers . ContentTier content_tiers.ContentTier: the content tier","title":"get_content_tier_by_uuid()"},{"location":"Client/#aiovalorant.client.Client.get_content_tiers","text":"Gets the content tiers. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ content_tiers . ContentTier ] list[content_tiers.ContentTier]: a list of the content tiers","title":"get_content_tiers()"},{"location":"Client/#aiovalorant.client.Client.get_contract_by_uuid","text":"Gets a contract by its uuid. Parameters: Name Type Description Default uuid str the contract's uuid required language typing . Optional [ str ] the language None Returns: Type Description contracts . Contract contracts.Contract: the contract","title":"get_contract_by_uuid()"},{"location":"Client/#aiovalorant.client.Client.get_contracts","text":"Gets the contracts. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ contracts . Contract ] list[contracts.Contract]: a list of the contracts","title":"get_contracts()"},{"location":"Client/#aiovalorant.client.Client.get_currencies","text":"Gets the currencies. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ currencies . Currency ] list[currencies.Currency]: a list of the currencies","title":"get_currencies()"},{"location":"Client/#aiovalorant.client.Client.get_currency_by_uuid","text":"Gets a currency by its uuid. Parameters: Name Type Description Default uuid str the currency's uuid required language str the language None Returns: Type Description currencies . Currency currencies.Curreny: the currency","title":"get_currency_by_uuid()"},{"location":"Client/#aiovalorant.client.Client.get_event_by_uuid","text":"Gets a event by its uuid. Parameters: Name Type Description Default uuid str the event's uuid required language str the language None Returns: Type Description events . Event events.Event: the event","title":"get_event_by_uuid()"},{"location":"Client/#aiovalorant.client.Client.get_events","text":"Gets the events. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ events . Event ] list[events.Event]: a list of the events","title":"get_events()"},{"location":"Client/#aiovalorant.client.Client.get_gamemode_by_uuid","text":"Gets a gamemode by its uuid. Parameters: Name Type Description Default uuid str the gamemode's uuid required language str the language None Returns: Type Description gamemodes . Gamemode gamemodes.Gamemode: the gamemode","title":"get_gamemode_by_uuid()"},{"location":"Client/#aiovalorant.client.Client.get_gamemode_equippable_by_uuid","text":"Gets a gamemode equippable by its uuid. Parameters: Name Type Description Default uuid str the gamemode equippable's uuid required language str the language None Returns: Type Description gamemodes . GamemodeEquippable gamemodes.GamemodeEquippable: the gamemode equippable","title":"get_gamemode_equippable_by_uuid()"},{"location":"Client/#aiovalorant.client.Client.get_gamemode_equippables","text":"Gets the gamemodes equippables. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ gamemodes . GamemodeEquippable ] list[gamemodes.Gamemode]: a list of the gamemodee eqippables","title":"get_gamemode_equippables()"},{"location":"Client/#aiovalorant.client.Client.get_gamemodes","text":"Gets the gamemodes. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ gamemodes . Gamemode ] list[gamemodes.Gamemode]: a list of the gamemodes","title":"get_gamemodes()"},{"location":"Client/#aiovalorant.client.Client.get_gear","text":"Gets the gear. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ gear . Gear ] list[gear.gear]: a list of the gear","title":"get_gear()"},{"location":"Client/#aiovalorant.client.Client.get_gear_by_uuid","text":"Gets a gear by its uuid. Parameters: Name Type Description Default uuid str the gear's uuid required language str the language None Returns: Type Description gear . Gear gear.gear: the gear","title":"get_gear_by_uuid()"},{"location":"Client/#aiovalorant.client.Client.get_level_borders","text":"Gets the level borders. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ level_borders . LevelBorder ] list[level_borders.LevelBorder]: a list of the level borders","title":"get_level_borders()"},{"location":"Client/#aiovalorant.client.Client.get_level_borders_by_uuid","text":"Gets a level border by its uuid. Parameters: Name Type Description Default uuid str the level border's uuid required language str the language None Returns: Type Description level_borders . LevelBorder level_borders.LevelBorder: the level border","title":"get_level_borders_by_uuid()"},{"location":"Client/#aiovalorant.client.Client.get_map_by_uuid","text":"Gets a map by its uuid. Parameters: Name Type Description Default uuid str the map's uuid required language str the language None Returns: Type Description maps . Map maps.Map: the map","title":"get_map_by_uuid()"},{"location":"Client/#aiovalorant.client.Client.get_maps","text":"Gets the maps. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ maps . Map ] list[maps.Map]: a list of the maps","title":"get_maps()"},{"location":"Client/#aiovalorant.client.Client.get_player_card_by_uuid","text":"Gets a player card by its uuid. Parameters: Name Type Description Default uuid str the player card's uuid required language str the language None Returns: Type Description player_cards . PlayerCard player_cards.PlayerCard: the player card","title":"get_player_card_by_uuid()"},{"location":"Client/#aiovalorant.client.Client.get_player_cards","text":"Gets the player cards. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ player_cards . PlayerCard ] list[player_cards.PlayerCard]: a list of the player cards","title":"get_player_cards()"},{"location":"Client/#aiovalorant.client.Client.get_player_title_by_uuid","text":"Gets a player title by its uuid. Parameters: Name Type Description Default uuid str the player title's uuid required language str the language None Returns: Type Description player_titles . PlayerTitle player_titles.Playertitle: the player title","title":"get_player_title_by_uuid()"},{"location":"Client/#aiovalorant.client.Client.get_player_titles","text":"Gets the player titles. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ player_titles . PlayerTitle ] list[player_titles.Playertitle]: a list of the player titles","title":"get_player_titles()"},{"location":"Client/#aiovalorant.client.Client.get_season_by_uuid","text":"Gets a season by its uuid. Parameters: Name Type Description Default uuid str the season's uuid required language str the language None Returns: Type Description seasons . Season seasons.Season: the season","title":"get_season_by_uuid()"},{"location":"Client/#aiovalorant.client.Client.get_seasons","text":"Gets the seasons. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ seasons . Season ] list[seasons.Season]: a list of the seasons","title":"get_seasons()"},{"location":"Client/#aiovalorant.client.Client.get_spray_by_uuid","text":"Gets a spray by its uuid. Parameters: Name Type Description Default uuid str the spray's uuid required language str the language None Returns: Type Description sprays . Spray sprays.Spray: the spray","title":"get_spray_by_uuid()"},{"location":"Client/#aiovalorant.client.Client.get_spray_level_by_uuid","text":"Gets a spray level by its uuid. Parameters: Name Type Description Default uuid str the spray level's uuid required language str the language None Returns: Type Description sprays . Spray sprays.SprayLevel: the spray level","title":"get_spray_level_by_uuid()"},{"location":"Client/#aiovalorant.client.Client.get_spray_levels","text":"Gets the spray levels. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ sprays . SprayLevel ] list[sprays.SprayLevel]: a list of the spray levels","title":"get_spray_levels()"},{"location":"Client/#aiovalorant.client.Client.get_sprays","text":"Gets the sprays. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ sprays . Spray ] list[sprays.Spray]: a list of the sprays","title":"get_sprays()"},{"location":"Client/#aiovalorant.client.Client.get_themes","text":"Gets the themes. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ themes . Theme ] list[themes.Theme]: a list of the themes","title":"get_themes()"},{"location":"Client/#aiovalorant.client.Client.get_themes_by_uuid","text":"Gets a theme by its uuid. Parameters: Name Type Description Default uuid str the theme's uuid required language str the language None Returns: Type Description themes . Theme themes.Theme: the theme","title":"get_themes_by_uuid()"},{"location":"Client/#aiovalorant.client.Client.get_version","text":"Gets the version. Returns: Type Description version . Version version.Version: the version","title":"get_version()"},{"location":"Client/#aiovalorant.client.Client.get_weapon_skin_by_uuid","text":"Gets a weapon skin by its uuid. Parameters: Name Type Description Default uuid str the weapon skin's uuid required language str the language None Returns: Type Description weapons . WeaponSkin weapons.WeaponSkin: the weapon skin","title":"get_weapon_skin_by_uuid()"},{"location":"Client/#aiovalorant.client.Client.get_weapon_skin_chroma_by_uuid","text":"Gets a weapon skin by its uuid. Parameters: Name Type Description Default uuid str the weapon skin's uuid required language str the language None Returns: Type Description weapons . WeaponSkinChroma weapons.WeaponSkinChroma: the weapon skin","title":"get_weapon_skin_chroma_by_uuid()"},{"location":"Client/#aiovalorant.client.Client.get_weapon_skin_chromas","text":"Gets weapon skin chromas. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ weapons . WeaponSkinChroma ] list[weapons.WeaponSkinChroma]: a list of the weapon skin chromas","title":"get_weapon_skin_chromas()"},{"location":"Client/#aiovalorant.client.Client.get_weapon_skins","text":"Gets weapon skins. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ weapons . WeaponSkin ] list[weapons.WeaponSkin]: a list of the weapon skins","title":"get_weapon_skins()"},{"location":"Client/#aiovalorant.client.Client.get_weapons","text":"Gets weapons. Parameters: Name Type Description Default language typing . Optional [ str ] the language None Returns: Type Description list [ weapons . Weapon ] list[weapons.Weapon]: a list of the weapons","title":"get_weapons()"},{"location":"Client/#aiovalorant.client.Client.get_weapons_by_uuid","text":"Gets a weapon by its uuid. Parameters: Name Type Description Default uuid str the weapon's uuid required language str the language None Returns: Type Description weapons . Weapon weapons.Weapon: the weapon","title":"get_weapons_by_uuid()"},{"location":"DoesNotExist/","text":"Bases: ValorantAPIException The object tied to the uuid does not exist.","title":"DoesNotExist"},{"location":"MissingOrInvalidParameters/","text":"Bases: ValorantAPIException When one of the parameters is invalid or missing.","title":"MissingOrInvalidParameters"},{"location":"ValorantAPIException/","text":"Bases: Exception The base exception for an API error.","title":"ValorantAPIException"},{"location":"agents/","text":"Ability Bases: pydantic . BaseModel Represents an agent's ability. Attributes: Name Type Description slot str the slot display_name str the display name description str the description display_icon typing . Optional [ str ] the display icon Agent Bases: traits . Identifiable Represents a Valorant agent. Attributes: Name Type Description uuid str the uuid display_name str the display name description str the description developer_name str the developer's name character_tags typing . Optional [ list [ str ]] the character tags display_icon str the display icon display_icon_small str the small display icon bust_portrait typing . Optional [ str ] the bust portrait full_portrait typing . Optional [ str ] the full portrait full_portrait_v2 typing . Optional [ str ] the second full portrait kill_feed_portrait str the kill feed portrait background typing . Optional [ str ] the background background_gradient_colors typing . Optional [ list [ str ]] the background gradient colors asset_path str the asset path is_full_portrait_right_facing bool if the portrait is right facing is_playable_charcter bool if the character can be played is_available_for_test bool if the agent is avaliable for test is_base_content bool if the agent is base content role typing . Optional [ Role ] the agent's role abilities typing . Optional [ Abiity ] the agent's abilities voice_line typing . Optional [ VoiceLine ] the agent's voice line MediaList Bases: pydantic . BaseModel Represents a media list from an agent's voiceline. Attributes: Name Type Description id str the id wwise str the wwise wave str the wave Role Bases: pydantic . BaseModel Represents an agent's role. Attributes: Name Type Description uuid str the uuid display_name str the display name description str the description display_icon str the display icon VoiceLine Bases: pydantic . BaseModel Represents an agent's voice line. Attributes: Name Type Description min_duration float the minimum duration max_duration float the maximum duration media_list list [ MediaList ] the media list","title":"agents"},{"location":"agents/#aiovalorant.models.agents.Ability","text":"Bases: pydantic . BaseModel Represents an agent's ability. Attributes: Name Type Description slot str the slot display_name str the display name description str the description display_icon typing . Optional [ str ] the display icon","title":"Ability"},{"location":"agents/#aiovalorant.models.agents.Agent","text":"Bases: traits . Identifiable Represents a Valorant agent. Attributes: Name Type Description uuid str the uuid display_name str the display name description str the description developer_name str the developer's name character_tags typing . Optional [ list [ str ]] the character tags display_icon str the display icon display_icon_small str the small display icon bust_portrait typing . Optional [ str ] the bust portrait full_portrait typing . Optional [ str ] the full portrait full_portrait_v2 typing . Optional [ str ] the second full portrait kill_feed_portrait str the kill feed portrait background typing . Optional [ str ] the background background_gradient_colors typing . Optional [ list [ str ]] the background gradient colors asset_path str the asset path is_full_portrait_right_facing bool if the portrait is right facing is_playable_charcter bool if the character can be played is_available_for_test bool if the agent is avaliable for test is_base_content bool if the agent is base content role typing . Optional [ Role ] the agent's role abilities typing . Optional [ Abiity ] the agent's abilities voice_line typing . Optional [ VoiceLine ] the agent's voice line","title":"Agent"},{"location":"agents/#aiovalorant.models.agents.MediaList","text":"Bases: pydantic . BaseModel Represents a media list from an agent's voiceline. Attributes: Name Type Description id str the id wwise str the wwise wave str the wave","title":"MediaList"},{"location":"agents/#aiovalorant.models.agents.Role","text":"Bases: pydantic . BaseModel Represents an agent's role. Attributes: Name Type Description uuid str the uuid display_name str the display name description str the description display_icon str the display icon","title":"Role"},{"location":"agents/#aiovalorant.models.agents.VoiceLine","text":"Bases: pydantic . BaseModel Represents an agent's voice line. Attributes: Name Type Description min_duration float the minimum duration max_duration float the maximum duration media_list list [ MediaList ] the media list","title":"VoiceLine"},{"location":"buddies/","text":"Buddy Bases: traits . Identifiable Represents a buddy. Attributes: Name Type Description uuid str the uuid display_name str the display name is_hidden_if_not_owned bool hidden if not owned theme_uuid str the theme uuid display_icon str the display icon asset_path str the asset path levels list [ Level ] the levels Level Bases: traits . Identifiable Represents the level of a buddy. Attributes: Name Type Description uuid str the uuid charm_level int the charm level display_name str the display name display_icon str the display icon asset_path str the asset path","title":"buddies"},{"location":"buddies/#aiovalorant.models.buddies.Buddy","text":"Bases: traits . Identifiable Represents a buddy. Attributes: Name Type Description uuid str the uuid display_name str the display name is_hidden_if_not_owned bool hidden if not owned theme_uuid str the theme uuid display_icon str the display icon asset_path str the asset path levels list [ Level ] the levels","title":"Buddy"},{"location":"buddies/#aiovalorant.models.buddies.Level","text":"Bases: traits . Identifiable Represents the level of a buddy. Attributes: Name Type Description uuid str the uuid charm_level int the charm level display_name str the display name display_icon str the display icon asset_path str the asset path","title":"Level"},{"location":"bundles/","text":"Bundle Bases: traits . Identifiable Represents a bundle. Attributes: Name Type Description uuid str the uuid display_name str the display name display_name_sub_text str the display name sub text description str the description extra_description str the extra description promo_description str the promo description use_additional_context bool the addition use context display_icon str the display icon display_icon_2 str the second display icon vertical_promo_image str the vertical promotion image asset_path str the asset path","title":"bundles"},{"location":"bundles/#aiovalorant.models.bundles.Bundle","text":"Bases: traits . Identifiable Represents a bundle. Attributes: Name Type Description uuid str the uuid display_name str the display name display_name_sub_text str the display name sub text description str the description extra_description str the extra description promo_description str the promo description use_additional_context bool the addition use context display_icon str the display icon display_icon_2 str the second display icon vertical_promo_image str the vertical promotion image asset_path str the asset path","title":"Bundle"},{"location":"ceremonies/","text":"Ceremony Bases: traits . Identifiable Represents a ceremony. Attributes: Name Type Description uuid str the uuid display_name str the display name asset_path str the asset path","title":"ceremonies"},{"location":"ceremonies/#aiovalorant.models.ceremonies.Ceremony","text":"Bases: traits . Identifiable Represents a ceremony. Attributes: Name Type Description uuid str the uuid display_name str the display name asset_path str the asset path","title":"Ceremony"},{"location":"competitive_tiers/","text":"CompetitiveTier Bases: traits . Identifiable Represents a competitive tier. Attributes: Name Type Description uuid str the uuid asset_object_name str the asset object name tiers list [ Tier ] the tiers asset_path str the asset path Tier Bases: pydantic . BaseModel Represents a tier. Attributes: Name Type Description tier int the tier tier_name str the tier name division str the division division_name str the division name color str the color background_color str the background color small_icon str the small icon large_icon str the large icon rank_triangle_down_icon str the rank triangle down icon rank_triangle_up_icon str the rank triangle up icon","title":"competitive_tiers"},{"location":"competitive_tiers/#aiovalorant.models.competitive_tiers.CompetitiveTier","text":"Bases: traits . Identifiable Represents a competitive tier. Attributes: Name Type Description uuid str the uuid asset_object_name str the asset object name tiers list [ Tier ] the tiers asset_path str the asset path","title":"CompetitiveTier"},{"location":"competitive_tiers/#aiovalorant.models.competitive_tiers.Tier","text":"Bases: pydantic . BaseModel Represents a tier. Attributes: Name Type Description tier int the tier tier_name str the tier name division str the division division_name str the division name color str the color background_color str the background color small_icon str the small icon large_icon str the large icon rank_triangle_down_icon str the rank triangle down icon rank_triangle_up_icon str the rank triangle up icon","title":"Tier"},{"location":"content_tiers/","text":"ContentTier Bases: traits . Identifiable Represents a content tier Attributes: Name Type Description uuid str the uuid display_name str the display name dev_name str the dev name rank int the rank juice_value int the juice value juice_cost int the juice cost highlight_color str the highlight color display_icon str the display icon asset_path str the asset path","title":"content_tiers"},{"location":"content_tiers/#aiovalorant.models.content_tiers.ContentTier","text":"Bases: traits . Identifiable Represents a content tier Attributes: Name Type Description uuid str the uuid display_name str the display name dev_name str the dev name rank int the rank juice_value int the juice value juice_cost int the juice cost highlight_color str the highlight color display_icon str the display icon asset_path str the asset path","title":"ContentTier"},{"location":"contracts/","text":"Chapter Bases: pydantic . BaseModel Represents a chapter. Attributes: Name Type Description is_epilogue bool if it is an epilogue levels list [ Level ] the levels free_rewards list [ FreeReward ] the free rewards Content Bases: pydantic . BaseModel Represents content. Attributes: Name Type Description relation_type str the relation type relation_uuid str the relation uuid chapters list [ Chapter ] the chapters premium_reward_schedule_uuid str the premium reward schedule uuid premium_vp_cost int the premium vp cost Contract Bases: traits . Identifiable Represents a contract. Attributes: Name Type Description uuid str the uuid display_name str the display name display_icon str the display icon ship_it bool the ship it free_reward_schedule_uuid str the free reward schedule uuid content Content the content asset_path str the asset path FreeReward Bases: pydantic . BaseModel Represents a free reward. Attributes: Name Type Description type str the type uuid str the uuid amount int the amount is_highlighted bool if it is highlighted Level Bases: pydantic . BaseModel Represents a level. Attributes: Name Type Description reward Reward the reward xp int the xp vp_cost int the vp cost is_purchasable_with_vp typing . Optional [ bool ] if it can be purchased with vp Reward Bases: pydantic . BaseModel Represents a reward. Attributes: Name Type Description type str the type uuid str the uuid amount int the amount is_highlighted bool if it is highlighted","title":"contracts"},{"location":"contracts/#aiovalorant.models.contracts.Chapter","text":"Bases: pydantic . BaseModel Represents a chapter. Attributes: Name Type Description is_epilogue bool if it is an epilogue levels list [ Level ] the levels free_rewards list [ FreeReward ] the free rewards","title":"Chapter"},{"location":"contracts/#aiovalorant.models.contracts.Content","text":"Bases: pydantic . BaseModel Represents content. Attributes: Name Type Description relation_type str the relation type relation_uuid str the relation uuid chapters list [ Chapter ] the chapters premium_reward_schedule_uuid str the premium reward schedule uuid premium_vp_cost int the premium vp cost","title":"Content"},{"location":"contracts/#aiovalorant.models.contracts.Contract","text":"Bases: traits . Identifiable Represents a contract. Attributes: Name Type Description uuid str the uuid display_name str the display name display_icon str the display icon ship_it bool the ship it free_reward_schedule_uuid str the free reward schedule uuid content Content the content asset_path str the asset path","title":"Contract"},{"location":"contracts/#aiovalorant.models.contracts.FreeReward","text":"Bases: pydantic . BaseModel Represents a free reward. Attributes: Name Type Description type str the type uuid str the uuid amount int the amount is_highlighted bool if it is highlighted","title":"FreeReward"},{"location":"contracts/#aiovalorant.models.contracts.Level","text":"Bases: pydantic . BaseModel Represents a level. Attributes: Name Type Description reward Reward the reward xp int the xp vp_cost int the vp cost is_purchasable_with_vp typing . Optional [ bool ] if it can be purchased with vp","title":"Level"},{"location":"contracts/#aiovalorant.models.contracts.Reward","text":"Bases: pydantic . BaseModel Represents a reward. Attributes: Name Type Description type str the type uuid str the uuid amount int the amount is_highlighted bool if it is highlighted","title":"Reward"},{"location":"currencies/","text":"Currency Bases: traits . Identifiable Represents a currency. Attributes: Name Type Description uuid str the uuid display_name str the display name display_name_singular str the singular display name display_icon str the display icon large_icon str the large icon asset_path str the asset path","title":"currencies"},{"location":"currencies/#aiovalorant.models.currencies.Currency","text":"Bases: traits . Identifiable Represents a currency. Attributes: Name Type Description uuid str the uuid display_name str the display name display_name_singular str the singular display name display_icon str the display icon large_icon str the large icon asset_path str the asset path","title":"Currency"},{"location":"events/","text":"Event Bases: traits . Identifiable Represents an event. Attributes: Name Type Description uuid str the uuid display_name str the display name short_display_name str the short display name start_time datetime . datetime the start time end_time datetime . datetime the end time asset_path str the asset path","title":"events"},{"location":"events/#aiovalorant.models.events.Event","text":"Bases: traits . Identifiable Represents an event. Attributes: Name Type Description uuid str the uuid display_name str the display name short_display_name str the short display name start_time datetime . datetime the start time end_time datetime . datetime the end time asset_path str the asset path","title":"Event"},{"location":"gamemodes/","text":"GameFeatureOverride Bases: pydantic . BaseModel Represents a gamemode. Attributes: Name Type Description feature_name str the feature name state bool the state GameRuleBoolOverride Bases: pydantic . BaseModel Represents a gamemode. Attributes: Name Type Description rule_name str the rule name state bool the state Gamemode Bases: traits . Identifiable Represents a gamemode. Attributes: Name Type Description uuid str the uuid display_name str the display name duration str the duration allows_match_timeouts str the allows match timeouts is_team_voice_allowed bool if team voice is allowed is_minimap_hidden bool if the minimap is hidden orb_count int the orb count team_roles list [ str ] the team roles game_feature_overrides list [ GameFeatureOverride ] the game feature overrides game_rule_bool_overrides list [ GameRuleBoolOverride ] the game rule bool overrides display_icon str the display icon asset_path str the asset path GamemodeEquippable Bases: traits . Identifiable Represents a gamemode equippable. Attributes: Name Type Description uuid str the uuid display_name str the display name category str the category display_icon str the display icon kill_stream_icon str the kill stream icon asset_path str the asset path","title":"gamemodes"},{"location":"gamemodes/#aiovalorant.models.gamemodes.GameFeatureOverride","text":"Bases: pydantic . BaseModel Represents a gamemode. Attributes: Name Type Description feature_name str the feature name state bool the state","title":"GameFeatureOverride"},{"location":"gamemodes/#aiovalorant.models.gamemodes.GameRuleBoolOverride","text":"Bases: pydantic . BaseModel Represents a gamemode. Attributes: Name Type Description rule_name str the rule name state bool the state","title":"GameRuleBoolOverride"},{"location":"gamemodes/#aiovalorant.models.gamemodes.Gamemode","text":"Bases: traits . Identifiable Represents a gamemode. Attributes: Name Type Description uuid str the uuid display_name str the display name duration str the duration allows_match_timeouts str the allows match timeouts is_team_voice_allowed bool if team voice is allowed is_minimap_hidden bool if the minimap is hidden orb_count int the orb count team_roles list [ str ] the team roles game_feature_overrides list [ GameFeatureOverride ] the game feature overrides game_rule_bool_overrides list [ GameRuleBoolOverride ] the game rule bool overrides display_icon str the display icon asset_path str the asset path","title":"Gamemode"},{"location":"gamemodes/#aiovalorant.models.gamemodes.GamemodeEquippable","text":"Bases: traits . Identifiable Represents a gamemode equippable. Attributes: Name Type Description uuid str the uuid display_name str the display name category str the category display_icon str the display icon kill_stream_icon str the kill stream icon asset_path str the asset path","title":"GamemodeEquippable"},{"location":"gear/","text":"Gear Bases: traits . Identifiable Represents gear. Attributes: Name Type Description uuid str the uuid display_name str the display name description str the description display_icon str the display icon asset_path str the asset path shop_data ShopData the shop data GridPosition Bases: pydantic . BaseModel Represents the shop data. Attributes: Name Type Description row int the row column int the column ShopData Bases: pydantic . BaseModel Represents the shop data. Attributes: Name Type Description cost int the cost category str the category category_text str the category text grid_position GridPosition the grid position can_be_trashed bool if it can be trashed image str the image new_image str the new image new_image2 str the new second image asset_path str the asset path","title":"gear"},{"location":"gear/#aiovalorant.models.gear.Gear","text":"Bases: traits . Identifiable Represents gear. Attributes: Name Type Description uuid str the uuid display_name str the display name description str the description display_icon str the display icon asset_path str the asset path shop_data ShopData the shop data","title":"Gear"},{"location":"gear/#aiovalorant.models.gear.GridPosition","text":"Bases: pydantic . BaseModel Represents the shop data. Attributes: Name Type Description row int the row column int the column","title":"GridPosition"},{"location":"gear/#aiovalorant.models.gear.ShopData","text":"Bases: pydantic . BaseModel Represents the shop data. Attributes: Name Type Description cost int the cost category str the category category_text str the category text grid_position GridPosition the grid position can_be_trashed bool if it can be trashed image str the image new_image str the new image new_image2 str the new second image asset_path str the asset path","title":"ShopData"},{"location":"level_borders/","text":"LevelBorder Bases: traits . Identifiable Represents a level border. Attributes: Name Type Description uuid str the uuid starting_level int the starting level level_number_appearance str the level number appearance small_player_card_appearance str the small player card appearance asset_path str the asset path","title":"level_borders"},{"location":"level_borders/#aiovalorant.models.level_borders.LevelBorder","text":"Bases: traits . Identifiable Represents a level border. Attributes: Name Type Description uuid str the uuid starting_level int the starting level level_number_appearance str the level number appearance small_player_card_appearance str the small player card appearance asset_path str the asset path","title":"LevelBorder"},{"location":"maps/","text":"Callout Bases: pydantic . BaseModel Represents a callout. Attributes: Name Type Description region_name str the region name super_region_name str the super region name location Location the location Location Bases: pydantic . BaseModel Represents a location. Attributes: Name Type Description x float the x y float the y Map Bases: traits . Identifiable Represents a map. Attributes: Name Type Description uuid str the uuid asset_path str the asset path display_name str the display name coordinates str the coordinates display_icon str the display icon list_view_icon str the list view icon splash str the splash map_url str the map url x_multiplier float the x multiplier y_multiplier float the y multiplier x_scalar_to_add float the x scalar to add y_scalar_to_add float the y scalar to add callouts list[Callout the callouts","title":"maps"},{"location":"maps/#aiovalorant.models.maps.Callout","text":"Bases: pydantic . BaseModel Represents a callout. Attributes: Name Type Description region_name str the region name super_region_name str the super region name location Location the location","title":"Callout"},{"location":"maps/#aiovalorant.models.maps.Location","text":"Bases: pydantic . BaseModel Represents a location. Attributes: Name Type Description x float the x y float the y","title":"Location"},{"location":"maps/#aiovalorant.models.maps.Map","text":"Bases: traits . Identifiable Represents a map. Attributes: Name Type Description uuid str the uuid asset_path str the asset path display_name str the display name coordinates str the coordinates display_icon str the display icon list_view_icon str the list view icon splash str the splash map_url str the map url x_multiplier float the x multiplier y_multiplier float the y multiplier x_scalar_to_add float the x scalar to add y_scalar_to_add float the y scalar to add callouts list[Callout the callouts","title":"Map"},{"location":"player_cards/","text":"PlayerCard Bases: traits . Identifiable Represents a player card. Attributes: Name Type Description uuid str the uuid asset_path str the asset path display_name str the display name is_hidden_if_not_owned bool the is hidden if not owned theme_uuid str the theme uuid display_icon str the display icon wide_art str the wide art large_art str the large art","title":"player_cards"},{"location":"player_cards/#aiovalorant.models.player_cards.PlayerCard","text":"Bases: traits . Identifiable Represents a player card. Attributes: Name Type Description uuid str the uuid asset_path str the asset path display_name str the display name is_hidden_if_not_owned bool the is hidden if not owned theme_uuid str the theme uuid display_icon str the display icon wide_art str the wide art large_art str the large art","title":"PlayerCard"},{"location":"seasons/","text":"Border Bases: traits . Identifiable Represents a border. Attributes: Name Type Description uuid str the uuid asset_path str the asset path level int the level wins_required int the wins required display_icon str the display icon small_icon str the small icon CompetitiveSeason Bases: traits . Identifiable Represents a competitive season. Attributes: Name Type Description uuid str the uuid asset_path str the asset path start_time datetime . datetime the start time end_time datetime . datetime the end time season_uuid str the season uuid competitive_tiers_uuid str the competitive tiers uuid borders list[Border the borders Season Bases: traits . Identifiable Represents a season. Attributes: Name Type Description uuid str the uuid asset_path str the asset path display_name str the display name type str the type start_time datetime . datetime the start time end_time datetime . datetime the end time parent_uuid str the parent uuid","title":"seasons"},{"location":"seasons/#aiovalorant.models.seasons.Border","text":"Bases: traits . Identifiable Represents a border. Attributes: Name Type Description uuid str the uuid asset_path str the asset path level int the level wins_required int the wins required display_icon str the display icon small_icon str the small icon","title":"Border"},{"location":"seasons/#aiovalorant.models.seasons.CompetitiveSeason","text":"Bases: traits . Identifiable Represents a competitive season. Attributes: Name Type Description uuid str the uuid asset_path str the asset path start_time datetime . datetime the start time end_time datetime . datetime the end time season_uuid str the season uuid competitive_tiers_uuid str the competitive tiers uuid borders list[Border the borders","title":"CompetitiveSeason"},{"location":"seasons/#aiovalorant.models.seasons.Season","text":"Bases: traits . Identifiable Represents a season. Attributes: Name Type Description uuid str the uuid asset_path str the asset path display_name str the display name type str the type start_time datetime . datetime the start time end_time datetime . datetime the end time parent_uuid str the parent uuid","title":"Season"},{"location":"sprays/","text":"Level Bases: traits . Identifiable Represnts a level. Attributes: Name Type Description uuid str the uuid asset_path str the asset path spray_level int the spray level display_name str the display name display_icon str the display icon Spray Bases: traits . Identifiable Represents a spray. Attributes: Name Type Description uuid str the uuid asset_path str the asset path display_name str the display name category str the category theme_uuid str the theme uuid display_icon str the display icon full_icon str the full icon full_transparent_icon str the full transparent icon levels list [ Level ] the levels SprayLevel Bases: Level Represnts a spray level. Attributes: Name Type Description uuid str the uuid asset_path str the asset path spray_level int the spray level display_name str the display name display_icon str the display icon","title":"sprays"},{"location":"sprays/#aiovalorant.models.sprays.Level","text":"Bases: traits . Identifiable Represnts a level. Attributes: Name Type Description uuid str the uuid asset_path str the asset path spray_level int the spray level display_name str the display name display_icon str the display icon","title":"Level"},{"location":"sprays/#aiovalorant.models.sprays.Spray","text":"Bases: traits . Identifiable Represents a spray. Attributes: Name Type Description uuid str the uuid asset_path str the asset path display_name str the display name category str the category theme_uuid str the theme uuid display_icon str the display icon full_icon str the full icon full_transparent_icon str the full transparent icon levels list [ Level ] the levels","title":"Spray"},{"location":"sprays/#aiovalorant.models.sprays.SprayLevel","text":"Bases: Level Represnts a spray level. Attributes: Name Type Description uuid str the uuid asset_path str the asset path spray_level int the spray level display_name str the display name display_icon str the display icon","title":"SprayLevel"},{"location":"themes/","text":"Theme Bases: traits . Identifiable Represents a theme. Attributes: Name Type Description uuid str the uuid asset_path str the asset path display_name str the display name display_icon str the display icon store_featured_image str the store featured image","title":"themes"},{"location":"themes/#aiovalorant.models.themes.Theme","text":"Bases: traits . Identifiable Represents a theme. Attributes: Name Type Description uuid str the uuid asset_path str the asset path display_name str the display name display_icon str the display icon store_featured_image str the store featured image","title":"Theme"},{"location":"traits/","text":"Identifiable Bases: pydantic . BaseModel Represents an object with an uuid and asset path. Attributes: Name Type Description uuid str the uuid asset_path str the asset path","title":"traits"},{"location":"traits/#aiovalorant.traits.Identifiable","text":"Bases: pydantic . BaseModel Represents an object with an uuid and asset path. Attributes: Name Type Description uuid str the uuid asset_path str the asset path","title":"Identifiable"},{"location":"version/","text":"Version Bases: pydantic . BaseModel Represents the version. Attributes: Name Type Description manifest_id str the manifest id branch str the branch version str the version build_version str the build version engine_version str the engine version riot_client_version str the riot client version build_date <class 'datetime.datetime'> the build date","title":"version"},{"location":"version/#aiovalorant.models.version.Version","text":"Bases: pydantic . BaseModel Represents the version. Attributes: Name Type Description manifest_id str the manifest id branch str the branch version str the version build_version str the build version engine_version str the engine version riot_client_version str the riot client version build_date <class 'datetime.datetime'> the build date","title":"Version"},{"location":"weapons/","text":"ADSStats Bases: pydantic . BaseModel Represents the ADS stats. Attributes: Name Type Description zoom_multiplier float the zoom multiplier fire_rate float the fire rate run_speed_multiplier float the run speed multiplier burst_count int the burst count first_bullet_accuracy float the first bullet accuracy AirBurstStats Bases: pydantic . BaseModel Represents the air burst stats. Attributes: Name Type Description shotgun_pellet_count int the shotgun pellet count burst_distance float the burst distance AltShotgunStats Bases: pydantic . BaseModel Represents the alt shotgun stats. Attributes: Name Type Description shotgun_pellet_count int the shotgun pellet count burst_rate float the burst rate Chroma Bases: traits . Identifiable Represents a chroma. Attributes: Name Type Description uuid str the uuid asset_path str the asset path display_name str the display name display_icon str the display icon full_render str the full render swatch str the swatch streamed_video str the streamed video DamageRange Bases: pydantic . BaseModel Represents the damage range. Attributes: Name Type Description range_start_meters float the range start meters range_end_meters float the range end meters head_damage float the head damage body_damage float the body damage leg_damage float the leg damage GridPosition Bases: pydantic . BaseModel Represents a grid position. Attributes: Name Type Description row int the row column int the column Level Bases: traits . Identifiable Represents a level. Attributes: Name Type Description uuid str the uuid asset_path str the asset path display_name str the display name level_item str the level item display_icon str the display icon streamed_video str the streamed video ShopData Bases: pydantic . BaseModel Represents shop data. Attributes: Name Type Description cost int the cost category str the category category_text str the category text grid_position GridPosition the grid position can_be_trashed bool the can be trashed image str the image new_image str the new image new_image2 str the new image2 asset_path str the asset path Skin Bases: traits . Identifiable Represents a skin. Attributes: Name Type Description uuid str the uuid asset_path str the asset path display_name str the display name theme_uuid str the theme uuid content_tier_uuid str the content tier uuid display_icon str the display icon wallpaper str the wallpaper chromas list [ Chroma ] the chromas levels list [ Level ] the levels Weapon Bases: traits . Identifiable Represents a weapon. Attributes: Name Type Description uuid str the uuid asset_path str the asset path display_name str the display name category str the category default_skin_uuid str the default skin uuid display_icon str the display icon kill_stream_icon str the kill stream icon weapon_stats WeaponStats the weapon stats shop_data ShopData the shop data WeaponSkin Bases: Skin Represents a weapon skin. Attributes: Name Type Description uuid str the uuid asset_path str the asset path display_name str the display name theme_uuid str the theme uuid content_tier_uuid str the content tier uuid display_icon str the display icon wallpaper str the wallpaper chromas list [ Chroma ] the chromas levels list [ Level ] the levels WeaponSkinChroma Bases: Chroma Represents a chroma. Attributes: Name Type Description uuid str the uuid asset_path str the asset path display_name str the display name display_icon str the display icon full_render str the full render swatch str the swatch streamed_video str the streamed video WeaponStats Bases: pydantic . BaseModel Represents the weapon stats. Attributes: Name Type Description fire_rate float the fire rate magazine_size int the magazine size run_speed_multiplier float the run speed multiplier equip_time_seconds float the equip time seconds reload_time_seconds float the reload time seconds first_bullet_accuracy float the first bullet accuracy shotgun_pellet_count int the shotgun pellet count wall_penetration str the wall penetration feature str the feature fire_mode str the fire mode alt_fire_type str the alt fire type ads_stats ADSStats the ads stats alt_shotgun_stats AltShotgunStats the alt shotgun stats air_burst_stats AirBurstStats the air burst stats damage_ranges list [ DamageRange ] the damage ranges","title":"weapons"},{"location":"weapons/#aiovalorant.models.weapons.ADSStats","text":"Bases: pydantic . BaseModel Represents the ADS stats. Attributes: Name Type Description zoom_multiplier float the zoom multiplier fire_rate float the fire rate run_speed_multiplier float the run speed multiplier burst_count int the burst count first_bullet_accuracy float the first bullet accuracy","title":"ADSStats"},{"location":"weapons/#aiovalorant.models.weapons.AirBurstStats","text":"Bases: pydantic . BaseModel Represents the air burst stats. Attributes: Name Type Description shotgun_pellet_count int the shotgun pellet count burst_distance float the burst distance","title":"AirBurstStats"},{"location":"weapons/#aiovalorant.models.weapons.AltShotgunStats","text":"Bases: pydantic . BaseModel Represents the alt shotgun stats. Attributes: Name Type Description shotgun_pellet_count int the shotgun pellet count burst_rate float the burst rate","title":"AltShotgunStats"},{"location":"weapons/#aiovalorant.models.weapons.Chroma","text":"Bases: traits . Identifiable Represents a chroma. Attributes: Name Type Description uuid str the uuid asset_path str the asset path display_name str the display name display_icon str the display icon full_render str the full render swatch str the swatch streamed_video str the streamed video","title":"Chroma"},{"location":"weapons/#aiovalorant.models.weapons.DamageRange","text":"Bases: pydantic . BaseModel Represents the damage range. Attributes: Name Type Description range_start_meters float the range start meters range_end_meters float the range end meters head_damage float the head damage body_damage float the body damage leg_damage float the leg damage","title":"DamageRange"},{"location":"weapons/#aiovalorant.models.weapons.GridPosition","text":"Bases: pydantic . BaseModel Represents a grid position. Attributes: Name Type Description row int the row column int the column","title":"GridPosition"},{"location":"weapons/#aiovalorant.models.weapons.Level","text":"Bases: traits . Identifiable Represents a level. Attributes: Name Type Description uuid str the uuid asset_path str the asset path display_name str the display name level_item str the level item display_icon str the display icon streamed_video str the streamed video","title":"Level"},{"location":"weapons/#aiovalorant.models.weapons.ShopData","text":"Bases: pydantic . BaseModel Represents shop data. Attributes: Name Type Description cost int the cost category str the category category_text str the category text grid_position GridPosition the grid position can_be_trashed bool the can be trashed image str the image new_image str the new image new_image2 str the new image2 asset_path str the asset path","title":"ShopData"},{"location":"weapons/#aiovalorant.models.weapons.Skin","text":"Bases: traits . Identifiable Represents a skin. Attributes: Name Type Description uuid str the uuid asset_path str the asset path display_name str the display name theme_uuid str the theme uuid content_tier_uuid str the content tier uuid display_icon str the display icon wallpaper str the wallpaper chromas list [ Chroma ] the chromas levels list [ Level ] the levels","title":"Skin"},{"location":"weapons/#aiovalorant.models.weapons.Weapon","text":"Bases: traits . Identifiable Represents a weapon. Attributes: Name Type Description uuid str the uuid asset_path str the asset path display_name str the display name category str the category default_skin_uuid str the default skin uuid display_icon str the display icon kill_stream_icon str the kill stream icon weapon_stats WeaponStats the weapon stats shop_data ShopData the shop data","title":"Weapon"},{"location":"weapons/#aiovalorant.models.weapons.WeaponSkin","text":"Bases: Skin Represents a weapon skin. Attributes: Name Type Description uuid str the uuid asset_path str the asset path display_name str the display name theme_uuid str the theme uuid content_tier_uuid str the content tier uuid display_icon str the display icon wallpaper str the wallpaper chromas list [ Chroma ] the chromas levels list [ Level ] the levels","title":"WeaponSkin"},{"location":"weapons/#aiovalorant.models.weapons.WeaponSkinChroma","text":"Bases: Chroma Represents a chroma. Attributes: Name Type Description uuid str the uuid asset_path str the asset path display_name str the display name display_icon str the display icon full_render str the full render swatch str the swatch streamed_video str the streamed video","title":"WeaponSkinChroma"},{"location":"weapons/#aiovalorant.models.weapons.WeaponStats","text":"Bases: pydantic . BaseModel Represents the weapon stats. Attributes: Name Type Description fire_rate float the fire rate magazine_size int the magazine size run_speed_multiplier float the run speed multiplier equip_time_seconds float the equip time seconds reload_time_seconds float the reload time seconds first_bullet_accuracy float the first bullet accuracy shotgun_pellet_count int the shotgun pellet count wall_penetration str the wall penetration feature str the feature fire_mode str the fire mode alt_fire_type str the alt fire type ads_stats ADSStats the ads stats alt_shotgun_stats AltShotgunStats the alt shotgun stats air_burst_stats AirBurstStats the air burst stats damage_ranges list [ DamageRange ] the damage ranges","title":"WeaponStats"}]}